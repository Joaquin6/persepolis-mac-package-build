#!/usr/bin/env bash
packaging_path=`pwd`
git_repo='https://github.com/persepolisdm/persepolis.git'
venv_dir='venv'
error_color='\033[1;31m✗'
warn_color='\033[1;33m▶︎'
success_color='\033[1;32m✔︎'
reset_color='\033[0m'

error_msg() {
    echo -e "$error_color $1$reset_color"; exit 1;
}
warn_msg() {
    echo -e "$warn_color $1$reset_color";
}
success_msg() {
    echo -e "$success_color $1$reset_color";
}

clean_build_files () {
    warn_msg 'Removing {persepolis, dist, build} directories'
    if [[ -d 'persepolis' ]] ; then
        warn_msg "persepolis directory (git cloned dir) exist, Are you sure to remove it? [y/Y]"
        read ans
        if [[ ($ans == 'y') || ($ans == 'Y') ]]; then
            rm -rf persepolis
        fi
    fi
    rm -rf dist build
    if [ "$1" = "include_spec_file" ]; then
        warn_msg 'remove .spec file'
        rm 'Persepolis Download Manager.spec'
    fi
}


while getopts ":a:v:h" o; do
    case "$o" in
        a)
            grep -q '\.git$' <<< ${OPTARG} && git_repo=${OPTARG}
            ;;
        v)
            venv_dir=${OPTARG}
            ;;
        h)
            echo "Usage: $0 [ -a $git_repo -v virtualenv_dir_name ]" 1>&2; exit 1;
            ;;
    esac
done
shift $((OPTIND-1))

cd "$packaging_path"

if [[ ! (-d "$venv_dir") ]] ; then
    which virtualenv
    if [[ $? -ne 0 ]]; then
        error_msg 'You must install virtualenv!'
    fi
    virtualenv -p python3 "$venv_dir"
    if [[ $? -ne 0 ]]; then
        rm -rf "$venv_dir"
        echo $venv_dir
        error_msg 'Virtualenv creation failed!'
    fi
    success_msg 'Virtualenv directory created'
fi

source "./$venv_dir/bin/activate"
pip install -r ./requirements.txt
if [[ $? -ne 0 ]]; then
    error_msg 'Resolving python dependency failed'
else
    success_msg 'Python dependecy installed'
fi

clean_build_files

[[ ! (-d './persepolis') ]] && git clone "$git_repo" persepolis && success_msg "$git_repo cloned"

find persepolis/persepolis -type f -exec perl -i -pe 's/persepolis.scripts/scripts/g' '{}' \;
find persepolis/persepolis -type f -exec perl -i -pe 's/persepolis.gui/gui/g' '{}' \;

pyinstaller 'persepolis/persepolis/__main__.py' -w -i icon.icns -p persepolis/persepolis -n 'Persepolis Download Manager'

[ -d './dist' ] && cp aria2c 'dist/Persepolis Download Manager.app/Contents/MacOS/' && success_msg 'aria2c is added to package'
[ -d './dist' ] && cp ffmpeg 'dist/Persepolis Download Manager.app/Contents/MacOS/' && success_msg 'ffmpeg is added to package'
[ -d './dist' ] && cp Info.plist 'dist/Persepolis Download Manager.app/Contents/'   && success_msg 'Info.plist added to package'
[ -d './Persepolis Download Manager.app' ] && [ -d './dist' ] && rm -rf 'Persepolis Download Manager.app'
[ -d './dist' ] && mv 'dist/Persepolis Download Manager.app' .  && success_msg 'final package moving to root directory'

clean_build_files include_spec_file
